# https://github.com/marketplace/actions/sphinx-docs-to-github-pages
name: Sphinx docs to gh-pages

on:
  push:
    branches:
      - main

# workflow_dispatch:        # Un comment line if you also want to trigger action manually

jobs:
  sphinx_docs_to_gh-pages:
    runs-on: ubuntu-latest
    name: Sphinx docs to gh-pages
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Make conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9    # Python version to build the html sphinx documentation
          environment-file: devtools/conda-envs/docs_env.yaml    # Path to the documentation conda environment
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
      - name: Installing the library
        shell: bash -l {0}
        run: |
          python setup.py install
      - name: Running the Sphinx to gh-pages Action
        uses: uibcdf/action-sphinx-docs-to-gh-pages@v1.1.0
        with:
          branch: main
          dir_docs: docs
          sphinxapiopts: '--separate -o . ../'
          sphinxapiexclude: '../*setup* ../*.ipynb'
          sphinxopts: ''


## https://stackoverflow.com/questions/62683329/how-to-self-host-read-the-docs-using-github-pages
#name: docs_pages_workflow
#
#on: [ push ]
#
#jobs:
#
#  build_docs_job:
#    runs-on: ubuntu-latest
#    env:
#      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#
#  steps:
#  - name: Checkout
#    uses: actions/checkout@v2.3.4
#
#  - name: Set up Python
#    uses: actions/setup-python@v2.2.1
#    with:
#      python-version: 3.9
#
#  - name: Install dependencies
#    run: |
#      python -m pip install -U sphinx
#      python -m pip install sphinx-rtd-theme
#
#  - name: make the sphinx docs
#    run: |
#      make -C docs clean
#      make -C docs html
#
#  - name: Init new repo in dist folder and commit
#    run: |
#      cd docs/_build/html/
#      git init
#      touch .nojekyll
#      git add -A
#      git config --local user.email "action@github.com"
#      git config --local user.name "GitHub Action"
#      git commit -m 'deploy'
#
#  - name: Force push to destination branch
#    uses: ad-m/github-push-action@v0.5.0
#    with:
#      github_token: ${{ secrets.GITHUB_TOKEN }}
#      branch: gh-pages
#      force: true
#      directory: ./docs/_build/html
